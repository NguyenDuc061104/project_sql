# import psycopg2
# import pandas as pd

# # C·∫•u h√¨nh k·∫øt n·ªëi PostgreSQL
# DB_CONFIG = {
#     "host": "localhost",
#     "database": "project",
#     "user": "postgres",
#     "password": "ducan06112004",
#     "port": "5432"
# }

# def get_data_from_postgres(month, table_name="baocao_tonghop"):
#     """L·∫•y d·ªØ li·ªáu t·ª´ PostgreSQL sau khi g·ªçi Store Procedure"""
#     try:
#         conn = psycopg2.connect(**DB_CONFIG)
#         cursor = conn.cursor()
#         cursor.execute("CALL backdate_month(%s)", (month,))
#         conn.commit()
#         cursor.execute(f"SELECT * FROM {table_name}")
#         result = cursor.fetchall()
#         col_names = [desc[0] for desc in cursor.description]
#         cursor.close()
#         conn.close()
#         return pd.DataFrame(result, columns=col_names)
#     except Exception as e:
#         print(f"L·ªói PostgreSQL: {e}")
#         return pd.DataFrame()
import os
import psycopg2
import pandas as pd
from sqlalchemy import create_engine

# üîπ C·∫•u h√¨nh k·∫øt n·ªëi PostgreSQL LOCAL (DBeaver)
DB_CONFIG = {
    "host": "localhost",
    "database": "project",
    "user": "postgres",
    "password": "ducan06112004",
    "port": "5432"
}

# üîπ K·∫øt n·ªëi PostgreSQL tr√™n Render (L·∫•y t·ª´ bi·∫øn m√¥i tr∆∞·ªùng)
DATABASE_URL = os.getenv("DATABASE_URL")
engine = create_engine(DATABASE_URL)

def get_data_from_postgres(month, table_name="baocao_tonghop"):
    """L·∫•y d·ªØ li·ªáu t·ª´ PostgreSQL LOCAL sau khi g·ªçi Store Procedure"""
    try:
        # K·∫øt n·ªëi PostgreSQL LOCAL
        conn = psycopg2.connect(**DB_CONFIG)
        cursor = conn.cursor()

        # üîπ G·ªçi Stored Procedure (ch·∫°y theo th√°ng)
        cursor.execute("CALL backdate_month(%s)", (month,))
        conn.commit()

        # üîπ L·∫•y d·ªØ li·ªáu t·ª´ b·∫£ng
        cursor.execute(f"SELECT * FROM {table_name}")
        result = cursor.fetchall()
        col_names = [desc[0] for desc in cursor.description]

        # ƒê√≥ng k·∫øt n·ªëi
        cursor.close()
        conn.close()

        return pd.DataFrame(result, columns=col_names)
    
    except Exception as e:
        print(f"‚ùå L·ªói khi truy v·∫•n PostgreSQL LOCAL: {e}")
        return pd.DataFrame()

def push_data_to_render(df, table_name="baocao_tonghop"):
    """ƒê·∫©y d·ªØ li·ªáu l√™n PostgreSQL tr√™n Render"""
    try:
        if not df.empty:
            df.to_sql(table_name, engine, if_exists="append", index=False)
            print(f"‚úÖ D·ªØ li·ªáu ƒë√£ ƒë·∫©y l√™n Render th√†nh c√¥ng.")
        else:
            print("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu ƒë·ªÉ ƒë·∫©y l√™n Render.")
    except Exception as e:
        print(f"‚ùå L·ªói khi ƒë·∫©y d·ªØ li·ªáu l√™n Render: {e}")